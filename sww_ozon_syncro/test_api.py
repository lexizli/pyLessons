import json

import requests

q_params = {
    "offer_id": "2001459855591",
    "product_id": "0",
    "sku": 0
}

method = "https://api-seller.ozon.ru/v1/product/info/stocks-by-warehouse/fbs"  # Сюда вбиваем нужный метод

# https://api-seller.ozon.ru/v1/product/info/stocks-by-warehouse/fbs
# print(url + method)

headers = {"Client-Id": '129718',
           "Api-Key": '9ff0a38c-90ab-468d-8fac-8a47c0f69803'}

# req_json = {"offer_id": "2001459855591","product_id": 0,"sku": 0}

# req_json = {"fbs_sku": ["20958918207000"]}
req_json = {"fbs_sku": ["241716147", "241715689", "241715615", "241715663", "241716272", "241715800", "241715787"]}\
    # ,
    #                     "241715458", "241716138", "241715452", "241715454", "241715469", "241715459", "241715462",
    #                     "241715461", "241715478", "241715497", "241715491", "241715466", "242753364", "242755121",
    #                     "242723870", "241715463", "241715460", "242727079", "242815997", "242733664", "241718344",
    #                     "242753396", "241718471", "241721111", "241718423", "241718287", "241721204", "241721101",
    #                     "241718420", "241721010", "241721205", "241721086", "241721184", "241721356", "241721351",
    #                     "241721203", "241721146", "241721395", "241721327", "241721201", "241721100", "241713383",
    #                     "241721358", "241721224", "241721305", "241721399", "241718169", "241721145", "241721233",
    #                     "241715308", "241715417", "241715367", "241713376", "241715732", "241713380", "241715318",
    #                     "241713386", "241715465", "241715464", "241715521", "241715409", "241715851", "241715501",
    #                     "241715480", "241715656", "241716105", "241715627", "241715340", "241713358", "241716024",
    #                     "241716259", "241720691", "241720515", "241716161", "241716191", "241721103", "241720865",
    #                     "241715780", "241716040", "241716205", "241720703", "241715789", "241715786", "241715864",
    #                     "241715995", "241715753", "241715980", "241716022", "241715803", "241717771", "241715909",
    #                     "241716076", "241717596", "241716061", "241716104", "241717681", "241717770", "241716071",
    #                     "241717756", "241717603", "241717764", "241717663", "241717905", "241717912", "241717799",
    #                     "241679563", "241679530", "241679507", "241679506", "241679518", "241679562", "242829066",
    #                     "241679503", "241679535", "241682950", "242829001", "242829043", "242828983", "242828981",
    #                     "242828988", "242829040", "242828979", "242829027", "242828990", "242828997", "262717363",
    #                     "262717540", "262717604", "262717405", "262717399", "262717494", "262717501", "262717705",
    #                     "266461142", "262717773", "262717534", "262717684", "262799778", "262717659", "262717714",
    #                     "262717579", "276326203", "262799790", "262799683", "262717767", "262717724", "262717787",
    #                     "262717701", "262717733", "262717680", "276326027", "262717715", "262717780", "262717768",
    #                     "262717634", "262799833", "276325881", "276326064", "262717809", "563020709", "563020550",
    #                     "563019661", "563019782", "563020016", "563019843", "563020858", "563237672", "563257260",
    #                     "563261091", "563256791", "563257420", "563257250", "563257677", "563256925", "563261894",
    #                     "563285369", "563256802", "563257258", "563258186", "569019807", "569020071", "569868326",
    #                     "569870747", "569880354", "569983845", "570036914", "569873116", "569873114", "569880091",
    #                     "569868331", "569868769", "569868982", "569868370", "569868840", "569868340", "569868195",
    #                     "569880684", "569869286", "569873349", "569868343", "569873466", "569881117", "569874233",
    #                     "569872674", "570473100", "569874721", "569880870", "570473863", "569868939", "569869236",
    #                     "569881161", "570474247", "570473867", "569874894", "569868764", "569868139", "569881554",
    #                     "576806982", "576845237", "576833185", "576808574", "576830664", "576832471", "576808770",
    #                     "576807880", "576807452", "576808627", "576807235", "576806862", "576806565", "576812635",
    #                     "576808565", "576808766", "576809194", "576814761", "600234775", "600296747", "600296765",
    #                     "600298263", "600297091", "600309776", "600295894", "600296094", "600309824", "600310369",
    #                     "600310225", "600309561", "600309558", "600309195", "600308936", "600309184", "600702764",
    #                     "600784887", "600859383", "600868804", "600863552", "600877966", "600891277", "601257138",
    #                     "601254155", "601251770", "601253337", "601254769", "601254235", "601253075", "601252928",
    #                     "601367126", "602080707", "602084544", "602083847", "602083852", "602084132", "602080711",
    #                     "602453193", "602576638", "602575837", "602577113", "602575839", "602575841", "602577105",
    #                     "620459649", "620580771", "620580777", "620580725", "620580732", "620580749", "620580747",
    #                     "620586520", "620586531", "620586518", "620586529", "620580738", "620580813", "620580816",
    #                     "620580761", "620580755", "620580820", "620580766", "621163441", "621209105", "621209040",
    #                     "621207910", "621207938", "621207969", "621208987", "621209026", "621209081", "621209064",
    #                     "621209008", "621207996", "629500167", "629759805", "629655516", "629654723", "629655467",
    #                     "629655536", "631506305", "631506251", "631506247", "631506236", "631506263", "631506350",
    #                     "631506344", "631506347", "631506255", "631506301", "631506340", "631506341", "631506162",
    #                     "633570832", "633570848", "633570854", "633570855", "634194674", "634236438", "634236427",
    #                     "634235341", "634235344", "634235345", "634236819", "634236659", "634235348", "634236670",
    #                     "634236935", "638098970", "638421332", "638421336", "638421245", "638421331", "638421257",
    #                     "638421251", "638424447", "648853104", "648903294", "648903304", "648903299", "648903160",
    #                     "648903200", "648903199", "648903091", "648903211", "648903164", "648903179", "648903321",
    #                     "648903317", "648903202", "648903195", "648903322", "649405149", "648903173", "649320628",
    #                     "649364853", "651854480", "651871101", "651871522", "651871379", "651871390", "651871958",
    #                     "676406290", "688367824", "688367831", "694220773", "694220777", "694220779", "694220857",
    #                     "694220721", "694220943", "694220771", "694220949", "697098636", "697098632", "697098639",
    #                     "697098917", "697098628", "697098642", "697098647", "697098637", "697098895", "697098629",
    #                     "697098633", "697098906", "700930616", "700954216", "700954285", "700954262", "700954268",
    #                     "700954834", "700954835", "700954301", "700954299", "700954304", "714193145", "714217415",
    #                     "714193155", "714217606", "715045847", "716448041", "716448038", "716448034", "716448023",
    #                     "716448021", "716448045", "716448053", "716448033", "716448047", "716448029", "716448048",
    #                     "716448025", "716448030", "716448055", "716448018", "716448037", "716448051", "716448043",
    #                     "716448026", "717544969", "717773677", "717773689", "717773691", "717773684", "717773676",
    #                     "717773674", "717773682", "717773672", "717773688", "717773685", "717773680", "717773695",
    #                     "719556803", "720097151", "720097105", "720097280", "720097018", "720097065", "720097238",
    #                     "720097264", "720097266", "720097274", "720097161", "720097016", "720097282", "720097283",
    #                     "720097035", "720097049", "720097079", "720097275", "720097271", "720097286", "720096997",
    #                     "720096005", "720262051", "720533585", "720533590", "720533601", "720533603", "720533538",
    #                     "720533535", "720533531", "720533596", "720533594", "720533606", "720533543", "720533542",
    #                     "720533533", "720533600", "720533598", "720533609", "720533607", "720533611", "722378864",
    #                     "722471342", "722471340"]}

req = json.dumps(req_json)



responce = requests.post(method, headers=headers, data=req)
# {
#     "Client-Id": 129718,
#     "Api-Key": "9ff0a38c-90ab-468d-8fac-8a47c0f69803",
#     "offer_id": "2001459855591",
#     "product_id": 0,
#     "sku": 0
# }

print(responce.content)
# for stin in responce.content:
#     print(stin[product_id])

data = json.loads(responce.content.decode())
for product in data["result"]:
    print(str([product['product_id']] + [product['present']] + [product['reserved']]
          + [product['warehouse_id']] + [product['fbs_sku']]).replace("[", "").replace("]", "").split(","))

